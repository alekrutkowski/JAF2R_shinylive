[{"name":"app.R","content":"library(shiny)\r\nlibrary(plotly)\r\nlibrary(data.table)\r\nlibrary(magrittr)\r\n\r\nIS_SHINYLIVE <- \r\n  grepl(\"wasm\",R.Version()$arch)\r\n\r\nDATA <- \r\n  'data.Rds' %>% \r\n  {`if`(IS_SHINYLIVE,\r\n        (.) %T>% \r\n          download.file(\r\n            paste0('https://raw.githubusercontent.com/alekrutkowski/JAF2R_shinylive/main/data/',\r\n                   .),\r\n            .),\r\n        paste0('../data/',.)\r\n  )} %>% \r\n  readRDS()\r\n\r\nINDICATORS <-\r\n  DATA$JAF_SCORES %>% \r\n  .[,.(JAF_KEY,Description)] %>% \r\n  unique() %>% \r\n  .[, JAF_KEY__Description :=\r\n      paste0('[',JAF_KEY,'] ',Description)] %>% \r\n  {set_names(.$JAF_KEY,.$JAF_KEY__Description)} # key/name = '[JAF_KEY] Description', value = 'JAF_KEY'\r\n\r\nGEOS <-\r\n  DATA$EU_Members_geo_names %>% \r\n  .[, geo__geo_labels :=\r\n      paste0('[',geo,'] ',geo_labels)] %>% \r\n  {set_names(.$geo,.$geo__geo_labels)} # key/name = '[geo] geo_labels', value = 'geo'\r\n\r\nYEARS <-\r\n  DATA$JAF_GRAND_TABLE_reduced %>% \r\n  unique() %>% \r\n  .$time\r\n\r\nui <- fluidPage(\r\n  tags$head(\r\n    tags$style(HTML(\"\r\n    .flex-container {\r\n      display: flex;\r\n      justify-content: space-between;\r\n    }\r\n    .left-text {\r\n      /* Optional styling for left text */\r\n    }\r\n    .right-text {\r\n      /* Optional styling for right text */\r\n    }\r\n    \"))),\r\n  HTML('\r\n    <div class=\"flex-container\">\r\n      <div class=\"left-text\"><h1>JAF Indicators<\/h1><\/div>\r\n      <div class=\"right-text\">\r\n      <img src=\"https://raw.githubusercontent.com/alekrutkowski/JAF2R/main/JAF2R_logo_v3.png\" alt=\"JAF2R project logo\" height=\"40\"/>\r\n      <\/div>\r\n    <\/div>'),\r\n  selectInput(\r\n    inputId = \"SelectedIndics\",\r\n    label = HTML(\"<strong>&#x1F522; Select one or more indicators &ndash; start typing codes or names, use <kbd>Delete<\/kbd> or <kbd>Backspace<\/kbd> keyboard keys to delete<\/strong>\"),\r\n    choices = INDICATORS,\r\n    multiple=TRUE,\r\n    width = \"100%\"\r\n  ),\r\n  checkboxGroupInput(\r\n    inputId = \"SelectedScore\",\r\n    label = strong(\"Show standardised scores (latest year) or values (one or more years)\"),\r\n    choices = c(\"Tick for scores, untick for values\" = TRUE),\r\n    width = \"100%\"\r\n  ),\r\n  selectInput(\r\n    inputId = \"SelectedGeos\",\r\n    label = HTML(\"<strong>&#x1F310; Select countries or country aggregates, use <kbd>Delete<\/kbd> or <kbd>Backspace<\/kbd> keyboard keys to delete<\/strong>\"),\r\n    choices = GEOS,\r\n    multiple=TRUE,\r\n    width = \"100%\"\r\n  ),\r\n  sliderInput(\r\n    inputId = \"SelectedYears\",\r\n    label = strong(\"Select a start year for time series (if you want to see a longer period)\"),\r\n    min = min(YEARS),\r\n    max = max(YEARS)-1,\r\n    ticks=FALSE,\r\n    sep=\"\",\r\n    value = max(YEARS)-1,\r\n    width = \"100%\",\r\n    step = 1\r\n  ),\r\n  tabsetPanel(\r\n    tabPanel(\"Chart\",\r\n             plotlyOutput(\"ThePlot\")),\r\n    tabPanel(\"Table\",\r\n             tableOutput(\"TheTable\"))\r\n  )\r\n  \r\n)\r\n\r\nserver <- function(input, output) {\r\n  \r\n  output$TheTable <- renderTable({\r\n    DATA %>% \r\n      .$JAF_SCORES %>% \r\n      head(20)\r\n  })\r\n  \r\n  output$ThePlot <- renderPlotly({\r\n    # generate bins based on input$bins from ui.R\r\n    plot_ly(x = ~ faithful[, 2], type = \"histogram\")\r\n  })\r\n  \r\n}\r\n\r\nshinyApp(ui, server)\r\n","type":"text"},{"name":"DESCRIPTION","content":"Title: JAF Indicators\r\nAuthor: Alek R\r\nAuthorUrl: \r\nLicense: MIT\r\nTags: JAF2R\r\nType: Shiny\r\n","type":"text"},{"name":"Readme.md","content":"TO DO\r\n","type":"text"}]
