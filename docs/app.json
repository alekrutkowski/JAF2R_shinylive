[{"name":"app.R","content":"library(shiny)\r\nlibrary(shinyjs)\r\nlibrary(jsonlite)\r\n\r\nlibrary(data.table)\r\nlibrary(magrittr)\r\n\r\nIS_SHINYLIVE <- \r\n  grepl(\"wasm\",R.Version()$arch)\r\n\r\nfetchDataIntoInput <- function(input)\r\n  runjs(\"\r\n      fetch('https://raw.githubusercontent.com/alekrutkowski/JAF2R_shinylive/main/data/data.json')\r\n        .then(response => response.json())\r\n        .then(data => Shiny.setInputValue('jsonData', JSON.stringify(data)));\r\n  \")\r\n\r\nimportData. <- memoise::memoise(function(input)\r\n  (\r\n    if (IS_SHINYLIVE) {\r\n      fetchDataIntoInput(input)\r\n      input$jsonData\r\n    } else\r\n      readLines('../data/data.json',warn=FALSE) %>%\r\n      paste(collapse=\"\")\r\n  ) %>% \r\n    unserializeJSON() %>% \r\n    memDecompress('gzip') %>% \r\n    unserialize())\r\n\r\nui <- fluidPage(\r\n  useShinyjs(),  # Initialize shinyjs\r\n  titlePanel(\"Shinylive JavaScript GET Request\"),\r\n  actionButton(\"doCalc\", \"Do some calculation\"),\r\n  tableOutput(\"dataOutput\")\r\n)\r\n\r\nserver <- function(input, output) {\r\n  \r\n  output$dataOutput <- renderTable({\r\n    importData.(input) %>% \r\n      .$JAF_SCORES %>% \r\n      head(20)\r\n  })\r\n  \r\n}\r\n\r\nshinyApp(ui, server)\r\n","type":"text"},{"name":"DESCRIPTION","content":"Title: JAF Indicators\r\nAuthor: Alek R\r\nAuthorUrl: \r\nLicense: MIT\r\nTags: JAF2R\r\nType: Shiny\r\n","type":"text"},{"name":"Readme.md","content":"TO DO\r\n","type":"text"}]
